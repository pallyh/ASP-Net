Формы (HTML)
формы обратной связи - элементы на стороне клиента (в браузере),
которые служат для передачи данных на сервер

Отправка формы (submit) - процесс сбора и передачи данных (браузером)
- собираются данные из той формы, в которой нажат эл-т submit
   (<button> == <input type=submit )
- сбор касается только элементов
  = с тегами input, textarea, select, button
  = у которых есть атрибут name
	<input name = "i1" />			   | не отправляется - вне формы
	<form>							   | 
		<input name = "i2" value="v2"/>| отправляется 
		<input class= "i3" value="v3"/>| не отправляется - нет имени
		<button name="send">Send</>	   | отправляется
	</form>							   | ---------------
									   |	i2=v2&send=Send
- после сбора данных происходит отправка:
  = HTML страница разрушается (unload)
  = данные отправляются на сервер при помощи одного из запросов:
    GET   - данные попадают в URL (в строку запроса) ..../home?i2=v2&send=Send
	POST  - в тело запроса  /home     [i2=v2&send=Send]

-- сервер получает запрос, анализирует данные, затем отправляет ответ

- браузер получает ответ сервера и строит новую страницу

--------------------------
Чуть глубже. Структура запроса НТТР (request)

GET /home?i2=v2&send=Send HTTP/1.1	   | 1. - первая строка: Метод URL протокол
Host: localhost						   | 2. Заголовки, один на строку, по схеме
Connection: close					   |   Имя: значение\r\n
\r\n								   | Пустая строка - конец заголовков
Тело								   | 3. Тело

-------  HTTP - ответ (response) -----------------

HTTP/1.1 200 Ok						   | Одна строка: протокол код сообщение
Content-Type: text/html				   | Заголовки ответов. Если есть тело
Content-Length: 100500				   | это необходимые из них
									   | 
<!doctype html/>.......				   | 

------------------------------------------------------
Передача файлов
 - Upload     клиент --> сервер
 - Download   сервер --> клиент

В простейшем случае, Upload возможен при помощи формы. Для этого нужно:
 - указать метод post
 - указать кодирование: enctype="multipart/form-data"
 - разместить на форме эл-т: <input type="file"  

          Клиент                                    Сервер
 ФайлСистема     Браузер (форма)          (IIS)      (ASP)      ФайлСистема
         <------ <file/>												  
 puc.png ------> <submit>         		   RAM												  
      			 HTTP --------------->    TmpFile  -> IFormFile
				  FileName = "puc.png"   /      \---> CopyTo  --->  puc.png
				  [Body] = [puc.png] ---- Stream ---------------->


-------------------------------------------------------------------
Формы чаще всего передаются методом POST
Если в результате POST запроса выводится HTML (View), то
при попытке обновить страницу
 - выводится предупреждение от браузера (о повторной отправке формы)
 - при нажатии "Ок" происходит повторная отправка формы (с файлами, если есть)

Считается плохим тоном и не рекомендуется заканчивать POST запросы
представлениями. Рекомендуется перенаправлять на GET запросы.
 
                           new AuthController
POST RegUser ------------------->    RegUser
          302, Location: Register      |
           <----------------------   Redirect   ---> Session
													/
						   new AuthController      /
GET Register   --------------------> Register  <- /
                  200 Ok <html>         |
   <---------------------------------- View

В такой схеме есть особенность с передачей данных: т.к. запрос повторяется,
контроллер перезапускается и все его поля/свойства обнуляются
Решение - Сессии
В веб-разработке сессии - это механизм сохранения состояния (данных)
между запросами с хранением на стороне сервера.



